TypeScript란?
2012년 마이크로소프트가 발표한 타입스크립트(TypeScript)는 자바스크립트(JavaScript)를 기반으로 정적 타입 문법을 추가한 프로그래밍 언어이입니다.
타입스크립트는 자바스크립트를 사용하기 때문에 자바스크립트의 모든 기능을 포함한다. 또한 자바스크립트에는 포함되지 않는 새로운 기능들이 존재한다.
버그를 줄이고 -> 쉬운유지보수 -> 질 좋은 코드

1. 변수 값에 데이터 타입 지정 가능
ex)
// javascript
function add (a,b) {
    return a + b
}
console.log(add('3', '5'));

// typescript
function add (a: number, b:number) {
    return a + b
}
console.log(add('3', '5'));

2. 객체지향적
3. 컴파일 타임 오류를 잡을 수 있음
타입스크립트는 자바스크립트타입 환경에서 실행될 수 없음. 자바스크립트가 실행될 수 있는 브라우저가 타입스크립트 코드를 이해하지 못하기 때문.
따라서 타입스크립트로 작성된 코드는 자바스크립트로 다시 컴파일(어떤 언어의 코드를 다른 언어로 바꿔주는 변환 과정) 되어야 함. 
타입스크립트는 프로그래밍 언어임과 동시에 타입스크립트를 자바스크립트로 변환해 주는 컴파일러이기도 함.
우리가 어플리케이션을 타입스크립트로 작성할 때 타입스크립트의 컴파일러가 시작되고 우리가 작성한 타입스크립트는 브라우저가 이해할 수 있는 자바스크립트 코드로 변환된다.

npm?
node package manager
타입스크립트를 설치 하기 위해 사용되는 도구
npm은 Node Js(브라우저 밖에서 자바스크립트를 실행할 수 있는 환경이라 생각하면 됨)의 한 부분.
npm을 사용하기 위해 Node JS를 설치해 줘야 함

콘솔창 단축키 ctrl + shift + j

<터미널 설정>
오류 뜰 때는 앞에 npx 붙이기
tsc 파일이름.ts -> js파일로 변환
node 파일이름.js파일 -> 파일.js를 실행시킬 수 있음
tsc --init -> ts파일 오류난거 오류 없애주면서 tsconfig.json 파일 생성됨
tsc -w -> w는 watch 감시하다 줄임말로 ts에서 변화된게 있으면 js파일에도 자동으로 컴파일 시킴
